<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>name.abhijitsarkar.webservices.jaxws</groupId>
    <artifactId>ws-security-username-token</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>calculator-username-token-client</artifactId>
  <packaging>war</packaging>

  <description>
    WS-Security username token client. Tested in Wildfly 8.2.0.Final.
    <![CDATA[
      1) Generate client artifacts from the WSDL.
        
      2) Create a password callback that'll be called for the username set in the request context. In this case,
        the password is simply hard-coded but it may also be retrieved from a keystore.
      
      3) Set the username and the password callback to be used in the request context.
      
      4) This project uses the @WebServiceReference annotation to inject the endpoint reference. AFAIK, it only works
        in an EJB container or CDI container, not in JAX-WS or JAX-RS endpoint implementations.
        
      5) To run integration tests, run 'mvn clean test -P wildfly-arq -DintegTests'. The test will first deploy the
        service, then the client.
        
      6) The following entry needs to be added to the MANIFEST.MF. The maven war plugin does that for a regular build
        but for tests, we use a pre-genearted manifest from test/resources.
        Dependencies: org.apache.ws.security
    ]]>
    
    References:
    https://docs.jboss.org/author/display/WFLY8/WS-Security
    http://cxf.apache.org/docs/ws-securitypolicy.html
  </description>

  <dependencies>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.wildfly.bom</groupId>
        <artifactId>jboss-javaee-7.0-with-resteasy</artifactId>
        <version>8.2.1.Final</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.jvnet.jax-ws-commons</groupId>
        <artifactId>jaxws-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>wsimport-username-token-client</id>
            <goals>
              <goal>wsimport</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <packageName>name.abhijitsarkar.webservices.jaxws.security.ut.client.generated</packageName>
              <wsdlDirectory>src/main/resources/wsdl</wsdlDirectory>
              <wsdlFiles>
                <wsdlFile>calculator-ut.wsdl</wsdlFile>
              </wsdlFiles>
              <!-- This determines @WebService.wsdlLocation and @WebServiceClient.wsdlLocation 
                value. -->
              <wsdlLocation>http://localhost:8080/calculator-username-token-service/CalculatorUTService?wsdl</wsdlLocation>
              <!-- Turn off generated source compilation; Maven will do it anyway -->
              <xnocompile>true</xnocompile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>